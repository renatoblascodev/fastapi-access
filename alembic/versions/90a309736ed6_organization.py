"""organization

Revision ID: 90a309736ed6
Revises: b2af58604440
Create Date: 2024-07-24 15:33:43.960401

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "90a309736ed6"
down_revision = "b2af58604440"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization",
        sa.Column("cnpj", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "INACTIVE", name="organizationstatus"),
            nullable=False,
        ),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("cnpj"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_organization_uuid"), "organization", ["uuid"], unique=True)
    op.create_table(
        "organization_address",
        sa.Column("address", sa.String(length=100), nullable=False),
        sa.Column("city", sa.String(length=50), nullable=False),
        sa.Column("state", sa.String(length=2), nullable=False),
        sa.Column("postal_code", sa.String(length=20), nullable=False),
        sa.Column("organization_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organization.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("organization_uuid"),
    )
    op.create_index(
        op.f("ix_organization_address_uuid"),
        "organization_address",
        ["uuid"],
        unique=True,
    )
    op.create_table(
        "organization_config",
        sa.Column("snow_company", sa.String(length=20), nullable=False),
        sa.Column("customer_code", sa.String(length=20), nullable=False),
        sa.Column("ch_client_id", sa.String(length=20), nullable=False),
        sa.Column("security_group", sa.String(), nullable=False),
        sa.Column("organization_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organization.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("customer_code"),
        sa.UniqueConstraint("organization_uuid"),
        sa.UniqueConstraint("snow_company"),
    )
    op.create_index(
        op.f("ix_organization_config_uuid"),
        "organization_config",
        ["uuid"],
        unique=True,
    )
    op.create_table(
        "org_config_provider",
        sa.Column(
            "provider",
            sa.Enum("AWS", "AZR", "GCP", name="organizationprovider"),
            nullable=False,
        ),
        sa.Column("account_id", sa.String(length=20), nullable=True),
        sa.Column("account_regions", sa.String(), nullable=True),
        sa.Column("project_id", sa.String(length=40), nullable=True),
        sa.Column("project_zones", sa.String(), nullable=True),
        sa.Column("subscription_id", sa.String(length=20), nullable=True),
        sa.Column("subscription_dn", sa.String(), nullable=True),
        sa.Column("subscription_tenant", sa.String(length=20), nullable=True),
        sa.Column("organization_config_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_config_uuid"],
            ["organization_config.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(
        op.f("ix_org_config_provider_uuid"),
        "org_config_provider",
        ["uuid"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_org_config_provider_uuid"), table_name="org_config_provider")
    op.drop_table("org_config_provider")
    op.drop_index(op.f("ix_organization_config_uuid"), table_name="organization_config")
    op.drop_table("organization_config")
    op.drop_index(
        op.f("ix_organization_address_uuid"), table_name="organization_address"
    )
    op.drop_table("organization_address")
    op.drop_index(op.f("ix_organization_uuid"), table_name="organization")
    op.drop_table("organization")
    op.execute("DROP TYPE organizationstatus;")
    op.execute("DROP TYPE organizationprovider;")
    # ### end Alembic commands ###
